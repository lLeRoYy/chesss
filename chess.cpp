#include <iostream>


#define max(a,b) (((a) > (b)) ? (a) : (b))


#define min(a,b) (((a) < (b)) ? (a) : (b))


int main()
{

    setlocale(LC_ALL, ""); // локализауия чтобы работал ру
    int figurs[3][2]{}; // массив содержит позиции фигур x и y, у нас 3 масиива и каждый масиив отвечает за определенную фигуру а подмасиив это позиция в простарснтве {} Эти скобки это иницилиазианция перемнной (записывает нули ) 
    // 0 это черный кароль 1 это белая ладья а 2 это белый слон

    for (int i = 0; i < 3; i++) { // это цикл (для) для локальной перменннеой i к которой прибавляется по одному  до тех пор пока i не достигнет трех и на трах цикл не прервется и эта ай перейдет в команду сиин она дает нам ввод инофрмации в масиив с заданными параметрами до тех пор пока цикл не остановится p.s. значение ай может быть либо 0 либо 1 либо 2.
        std::cout << "Введите позицию (x y)";  // выводит текст в командную строку
        switch (i) {               // Конструкция switch-case позволяет сравнить некоторое выражение с набором значений 
        case 0:
            std::cout << " Короля\n"; // \n чтобы с новой строки
            break;  // заканчивает цикл
        case 1:
            std::cout << " Ладьи\n";
            break;
        case 2:
            std::cout << " Слона\n";
            break;
        }
    zanogo:// метка
        do {  // ду ваил тоже маиое что и ваил только проверка в конце
            std::cin >> figurs[i][0] >> figurs[i][1]; // сдесь все понятно 
        } while (!(figurs[i][0] < 9 && figurs[i][1] < 9 && figurs[i][0] > 0 && figurs[i][1] > 0)); // && и  ! это инверсия
        for (int j = 0; j < i; j++) {
            if (figurs[j][0] == figurs[i][0] && figurs[j][1] == figurs[i][1]) { // проверка на занятость клетки
                std::cout << "Позиция фигуры занята\n";
                goto zanogo; //  мы переходи в часть кода с меткой 
            }
        }
    }
    bool safe = 1;

    if ((figurs[0][0] == figurs[1][0] || figurs[0][1] == figurs[1][1]) && !(figurs[2][1] == figurs[1][1] || figurs[2][0] == figurs[1][0])
        && ((max(figurs[0][1], figurs[1][1]) > figurs[2][1] && min(figurs[0][1], figurs[1][1]) < figurs[2][1])
            || (max(figurs[0][0], figurs[1][0]) > figurs[2][0] && min(figurs[0][0], figurs[1][0]) < figurs[2][0]))) {
        std::cout << "Шах королю от ладьи\n";
        safe = 0;
    }

    if ((abs(figurs[0][0] - figurs[2][0]) == abs(figurs[0][1] - figurs[2][1]))
        && !((abs(figurs[1][0] - figurs[2][0]) == abs(figurs[1][1] - figurs[2][1]))
            && ((max(figurs[0][1], figurs[2][1]) > figurs[1][1] && min(figurs[0][1], figurs[2][1]) < figurs[1][1])
                || (max(figurs[0][0], figurs[2][0]) > figurs[1][0] && min(figurs[0][0], figurs[2][0]) < figurs[1][0]))))
    {
        std::cout << "Шах от слона\n";
        safe = 0;
    }


    if (safe) {
        std::cout << "Шаха нет\n";




    }
}
    


